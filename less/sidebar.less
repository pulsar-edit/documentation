
// In narrow presentations, the “sidebar” goes above the content.
.sidebar {
  // Position & Layout
  flex-direction: column;
  // Display & Visibility
  display: flex;
  // Typography
  font-size: 14px;

  h6 {
    // Box Model
    margin: 0;
  }
}

@media (min-width: @bp-larger-than-tablet) {
  // Once we've got enough window width for it, we can put the sidebar on the
  // side, and keep it on screen as the user scrolls.
  .sidebar {
    // Position & Layout
    position: sticky;
    // Clipping
    overflow: auto;
    // Box Model
    top: calc(var(--pageHeader_height, 0) + 1.5rem);
    bottom: 0;
    min-height: 50vh;
    max-height: calc(95vh - var(--pageHeader_height));
    max-width: 250px;
    min-width: 250px;
    // Margin-top matches the height of the heading plus its padding — so that
    // the sidebar and the main content area are aligned.
    margin-top: 6rem;
  }
}


// There can be up to three different lists of links in the sidebar. The first
// two are contained in `.sidebar__contents` and consist of (a) a breadcrumb
// trail and (b) a list of sibling pages.
//
// The second area, `.sidebar__toc`, contains the third list, if it's
// configured to display: a hierarchical outline built from whichever headings
// on the page have `id` attributes.

// Attempt to replicate the TOC style that we've got on the main Pulsar site.
.sidebar__contents,
.sidebar__toc {
  // Box Model
  padding: 0 0 1.5rem;

  ul li {
    // Box Model
    margin: 0;
  }

  // Hierarchical lists should decrease in size very gradually.
  ul ul {
    // Typography
    font-size: 95%;
    line-height: 110%;
  }

  ul {
    // Position & Layout
    list-style: none;
    // Box Model
    margin: 0;
  }

  li {
    // Box Model
    margin: 0;

    a {
      // Typography

      // Setting a fixed line-height here is how we can ensure each list item
      // takes up the same amount of vertical space even if the font size
      // decreases. The trade-off is that it'll look weird if it wraps to a
      // second line — which is also why we force ellipsis (in a separate style
      // block below) rather than allow it to wrap to a second line.
      line-height: 24px;
    }
  }

  a {
    // Display & Visibility
    display: block;
    // Box Model
    border-left: 2px solid var(--sidebar-border);
    // Typography
    color: var(--link-color-subtle);

    &.active {
      /// Box Model
      border-color: var(--link-color);
      // Typography
      color: var(--link-color);
      font-weight: 600;
    }
  }
}

.sidebar__contents {
  li {
    a {
      // Box Model
      padding-left: 1.5rem;
      // Typography
      text-indent: -0.5rem;
      line-height: 24px;
    }
  }
}

ul.sidebar__pages {
  // Box Model
  margin-top: 1rem;
}

// This item controls the visibility of the sibling page list. Since it's not
// part of the breadcrumbs, it could be confusing to show this on page load. I
// don't know if I've figured out the right presentation here.
.sidebar__item-toggle {
  // Typography
  font-style: italic;

  a {
    // Display & Visibility
    opacity: 0.6;
  }
}

// Clicking on that item toggles the `.sidebar--compact` class name on the
// root, which in turn controls the visibility of the sibling page links.
.sidebar--compact {
  .sidebar__item-optional {
    // Display & Visibility
    display: none;
  }
}

.sidebar__toc {
  a {
    // Clipping
    overflow: clip;
    // Typography
    white-space: nowrap;
    text-overflow: ellipsis;
    text-indent: -0.5rem;
  }

  a[data-level="0"] {
    // Box Model
    padding-left: 1.5rem;
  }
  a[data-level="1"] {
    // Box Model
    padding-left: 2.0rem;
  }
  a[data-level="2"] {
    // Box Model
    padding-left: 2.5rem;
  }
  a[data-level="3"] {
    // Box Model
    padding-left: 3.0rem;
  }
  a[data-level="4"] {
    // Box Model
    padding-left: 3.5rem;
  }
  a[data-level="5"] {
    // Box Model
    padding-left: 4.0rem;
  }
}
